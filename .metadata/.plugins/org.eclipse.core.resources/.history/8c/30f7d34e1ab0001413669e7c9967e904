package clases.iu.compra.cotizacion;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.enterprise.context.Conversation;
import javax.enterprise.context.ConversationScoped;
import javax.enterprise.inject.Default;
import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.inject.Named;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import clases.business.metales.vo.compra.ArticuloCompraMetal;
import clases.cotizacion.dto.ArticuloCotizar;
import clases.vo.cliente.Cliente;

@Named
@ConversationScoped
@Default
public class CompraView implements Serializable{
		
	
	 /**
	 * 
	 */
	private static final long serialVersionUID = 2732432874569849246L;
	
	private final Logger logger = LogManager.getLogger(CompraView.class);
	
	private int numeroArticolo=0;
	
	@Inject
	 private Conversation conversation;
	
	private List<ArticuloCotizar> articulos;
	private Cliente cliente;
	
	private String mensage;
	
	public CompraView() {
		
	}
	
	public float getTotalValuacionArticulos(){
		float total=0.0F;
		
		for(ArticuloCotizar a : this.articulos){
			total+=a.getCotizacion();
		}
		
		return total;
		
	}
	
	
	@PostConstruct
	private void init(){
		
		this.articulos= new ArrayList<ArticuloCotizar>();
		this.cliente= new Cliente();
	}
	
	public boolean mostrarTabla(){
		
		if(this.getArticulos().size()>0){
			
			return true;
		}
		return false;
	}

	public void initConversation(){
	    if (!FacesContext.getCurrentInstance().isPostback() 
	      && conversation.isTransient()) {
	    
	      conversation.begin();
	    }
	  }
	
	 public String endConversation(){
		    if(!conversation.isTransient()){
		      conversation.end();
		    }
		    return "cotizacion?faces-redirect=true";
		  }

	public Conversation getConversation() {
		return conversation;
	}

	public void setConversation(Conversation conversation) {
		this.conversation = conversation;
	}

	public List<ArticuloCotizar> getArticulos() {
		return articulos;
	}

	public void setArticulos(List<ArticuloCotizar> articulos) {
		this.articulos = articulos;
	}

	public Cliente getCliente() {
		return cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}
	
	public int getNumeroArtculo(){
		return ++this.numeroArticolo;
	}

	public String getMensage() {
		return mensage;
	}

	public void setMensage(String mensage) {
		this.mensage = mensage;
	}
	
	 
	 
}
